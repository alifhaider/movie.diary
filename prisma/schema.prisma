// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id       String      @id @unique @default(cuid())
  email    String   @unique
  username String  @unique
  password Password?


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  image   String?
  
  watchedMovies WatchedMovie[] 
  watchNextMovies WatchNextMovie[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Movie {
  id          String   @id @unique @default(cuid())
  title       String
  plot String?
  releaseDate DateTime?
  imdbLink    String?

  poster       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  watchedBy WatchedMovie[]
  watchNextBy WatchNextMovie[]

}

model WatchedMovie {
  id       String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  watchedAt DateTime @default(now())

  note  String?

  movie   Movie   @relation(fields: [movieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  movieId String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String


}

model WatchNextMovie {
  id       String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  movie   Movie   @relation(fields: [movieId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  movieId String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String


}
